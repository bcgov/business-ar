"""empty message

Revision ID: fe1a62b01dfa
Revises: b892c256d561
Create Date: 2024-06-26 19:55:01.143148

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fe1a62b01dfa'
down_revision = 'b892c256d561'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ar_reminders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipient', sa.String(length=1000), nullable=False),
    sa.Column('message', sa.String(length=8000), nullable=False),
    sa.Column('sent_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('fiscal_year', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ar_reminders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ar_reminders_recipient'), ['recipient'], unique=False)
        batch_op.create_index(batch_op.f('ix_ar_reminders_status'), ['status'], unique=False)

    with op.batch_alter_table('business', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=1000), nullable=True))
        batch_op.add_column(sa.Column('founding_date', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('last_ar_reminder_date', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('ar_reminder_flag', sa.Boolean(), nullable=True))
        batch_op.drop_index('ix_business_nano_id')
        batch_op.create_index(batch_op.f('ix_business_email'), ['email'], unique=False)
        batch_op.drop_column('nano_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('business', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nano_id', sa.VARCHAR(length=25), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_business_email'))
        batch_op.create_index('ix_business_nano_id', ['nano_id'], unique=False)
        batch_op.drop_column('ar_reminder_flag')
        batch_op.drop_column('last_ar_reminder_date')
        batch_op.drop_column('founding_date')
        batch_op.drop_column('email')

    with op.batch_alter_table('ar_reminders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ar_reminders_status'))
        batch_op.drop_index(batch_op.f('ix_ar_reminders_recipient'))

    op.drop_table('ar_reminders')
    # ### end Alembic commands ###
